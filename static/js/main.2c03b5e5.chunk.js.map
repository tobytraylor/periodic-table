{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Slot","props","number","state","setState","incrementMissed","size","Math","min","useDrop","accept","canDrop","item","monitor","drop","newState","collect","mon","isOver","isFilled","elementData","elements","style","border","margin","display","background","overflow","textAlign","fontSize","symbol","name","ref","color","boxShadow","Spacer","ElementTile","atomicMass","useDrag","type","isDragging","drag","opacity","SlotRow","from","to","boxes","i","push","key","SpacerRow","count","PeriodicTableSlots","App","map","x","table","setTable","missed","setMissed","correct","filter","length","options","sort","a","b","DndProvider","backend","Backend","Fragment","onClick","element","atomicNumber","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c03b5e5.chunk.js","sourcesContent":["import React, {useState, useEffect, ReactFragment} from 'react';\nimport './App.css';\nimport elements from './elements.json';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd'\nimport Backend from 'react-dnd-html5-backend'\n\n// TODO: Drag and drop shows a pointer, allows dirty cheaters, dirty dirty cheaters, hate them\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n\nconst Slot = (props) => {\n  const { number, state, setState, incrementMissed } = props; \n  const { height, width } = useWindowDimensions();\n  const size = `${Math.min(height, width) * .05}px`\n\n  if (!state) {\n    throw `blah ${number}`\n  }\n\n  const [{ isOver }, drop] = useDrop({\n    accept: \"TILE\",\n    //drop: () => moveKnight(x, y),\n    canDrop: (item, monitor) => {\n      return true\n      // console.log(JSON.stringify(item))\n      // return (item.number == number)\n    },\n    drop: (item, monitor) => {\n      if (item.number == number) {\n        let newState = [...state]\n        newState[number-1] = true\n        setState(newState)\n      } else {\n        incrementMissed()\n      }\n      \n    },\n    collect: (mon) => ({\n      isOver: !!mon.isOver()\n    }),\n  })\n\n  const isFilled = state[number-1]\n  const elementData = elements[number-1]\n  let tileKids;\n  if(isFilled) {\n    return (\n      <div\n          style={{width: size, \n                  height: size, \n                  border: '2px solid black', \n                  margin: \"1px\", \n                  display: 'inline-block',\n                  background: '#9fa1d4',\n                  overflow: 'hidden',\n                  textAlign: \"center\"}}>\n        <div style={{fontSize: '2vw'}}>{elementData.symbol}</div>\n        <div style={{fontSize: '.7vw'}}>{elementData.name}</div>\n      </div>\n    )\n  } else {\n    return (\n      <div ref={drop}  \n          style={{width: size, \n                  height: size, \n                  border: '2px solid black', \n                  margin: \"1px\", \n                  color: '#eee',\n                  display: 'inline-block',\n                  boxShadow: 'inset 0px 0px 9px #606180',\n                  background: (isOver) ? '#ddd' : '#888',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  }}>\n          <div>\n            <div style={{fontSize: \".9vw\"}}>{number}</div>\n          </div>\n      </div>\n    )\n  }\n \n}\n\nconst Spacer = () => {\n  const { height, width } = useWindowDimensions();\n  const size = `${Math.min(height, width) * .05}px`;\n  return (\n    <div style={{width: size, \n                height: size,\n                border: '2px solid white', \n                margin: \"1px\", \n                display: 'inline-block',\n                background: \"#fff\",\n                overflow: 'hidden',\n            }}>\n    </div>\n  ) \n}\n\n\n\nconst ElementTile = (props) => {\n  const { number, symbol, name, atomicMass } = props; \n  const { height, width } = useWindowDimensions();\n  const size = `${Math.min(height, width) * .05}px`;\n  const [ {isDragging}, drag] = useDrag({\n    item: { type: 'TILE', number: number },\n\t\tcollect: monitor => ({\n\t\t\tisDragging: !!monitor.isDragging(),\n\t\t}),\n  })\n  return (\n    <div ref={drag} \n        style={{width: size, \n                height: size, \n                border: '2px solid black', \n                margin: \"1px\", \n                display: 'inline-block',\n                background: '#9fa1d4',\n                textAlign: \"center\",\n                opacity: isDragging ? 0.5 : 1}}>\n\n      <div style={{fontSize: '3vh'}}>{symbol}</div>\n      <div style={{fontSize: '1.2vh'}}>{name}</div>\n    </div>\n  )\n}\n\nconst SlotRow = (props) => {\n  const { from, to, state, setState, incrementMissed} = props;\n  let boxes = [];\n  for (let i=from; i <= to; i++) {\n    boxes.push(<Slot key={i} number={i} state={state} setState={setState} incrementMissed={incrementMissed}/>)\n  }\n  return boxes;\n}\n\nconst SpacerRow = (props) => {\n  let boxes = [];\n  for (let i=0; i < props.count; i++) {\n    boxes.push(<Spacer key={i} />)\n  }\n  return boxes;\n}\n\nconst PeriodicTableSlots = ({state, setState, incrementMissed}) => {\n  return (\n    <div style={{textAlign: 'center'}}>\n      <div>\n        <Slot number={1} state={state} setState={setState} incrementMissed={incrementMissed}/>\n        <SpacerRow count={16} state={state} setState={setState}/>\n        <Slot number={2} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={3} to={4} state={state} setState={setState} incrementMissed={incrementMissed}/>\n        <SpacerRow count={10} state={state} setState={setState}/>\n        <SlotRow from={5} to={10} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={11} to={12} state={state} setState={setState} incrementMissed={incrementMissed}/>\n        <SpacerRow count={10} state={state} setState={setState}/>\n        <SlotRow from={13} to={18} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={19} to={36} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={37} to={54} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={55} to={56} state={state} setState={setState} incrementMissed={incrementMissed}/>\n        <Spacer />\n        <SlotRow from={72} to={86} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <SlotRow from={87} to={88} state={state} setState={setState} incrementMissed={incrementMissed}/>\n        <Spacer />\n        <SlotRow from={104} to={118} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n      <div>\n        <Spacer />\n      </div>\n      <div>\n      <Spacer />\n        <Spacer />\n        <Spacer />\n        <SlotRow from={57} to={71} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n     \n      <div>\n        <Spacer />\n        <Spacer />\n        <Spacer />\n        <SlotRow from={89} to={103} state={state} setState={setState} incrementMissed={incrementMissed}/>\n      </div>\n    </div>\n  );\n}\n\n\n\nconst App = () => {\n  const [table, setTable] = useState(elements.map((x) => {return false}))\n  const [missed, setMissed] = useState(0)\n  const correct = table.filter(x => x == true).length\n  \n  const incrementMissed = () => setMissed(missed+1) \n  const reset = () => {\n    setTable(elements.map((x) => {return false}))\n    setMissed(0)\n  }\n  \n  let options = []\n  for (var i=0; i< table.length; i++) {\n    if (!table[i]) {\n      options.push(elements[i])\n    }\n  }\n  options.sort((a,b) => (a.name > b.name) ? 1 : -1)\n  \n  return (\n    <DndProvider backend={Backend}>\n      <React.Fragment>\n        <table>\n          <tr style={{background: 'green', color: 'white'}}>\n            <td>Correct</td>\n            <td>{correct}</td>\n          </tr>\n          <tr style={{background: 'red', color: 'white'}}>\n            <td >Missed</td>\n            <td>{missed}</td>\n          </tr>\n          \n        </table>\n        <button onClick={reset}>Reset</button>\n        <PeriodicTableSlots state={table} setState={setTable} incrementMissed={incrementMissed}></PeriodicTableSlots>\n        <div>\n          {options.map((element) => \n            <ElementTile  key={element.atomicNumber}\n                        number={element.atomicNumber} \n                        symbol={element.symbol} \n                        name={element.name} \n                        atomicMass={element.atomicMass} ></ElementTile> )}\n        </div>\n      </React.Fragment>\n    </DndProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}